# updating the file
x = mean(data)
summary(data)
# updating the file
data = (9, 6, 17, 31, 11 )
# updating the file
data = c(9, 6, 17, 31, 11 )
x = mean(data)
summary(data)
z = x/2
z
setwd("E:/New folder (5)/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-14 ðŸ‘‰ Histogram in R (Part-2)")
# Importing the dataset
dataset = read.csv("dataset.csv")
dataset = read.csv("dataset.csv")
# Importing the dataset
dataset = read.csv("data.csv")
# Importing the library
library(ggplot2)
#creating the basic histogram
ggplot(dataset, aes(x=weight))+
geom_histogram(color = "white")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x=weight, , fill = sex))+
geom_histogram(color = "white")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x=weight, , fill = sex))+
geom_histogram(color = "white", alpha = .5)
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x=weight, , fill = sex))+
geom_histogram(color = "white", alpha = .5, position = "identity")
# Interleaved histograms
ggplot(dataset, aes(x=weight, , fill = sex))+
geom_histogram(color = "white", alpha = .5, position = "dodge")
# Legend replace in the top
ggplot(dataset, aes(x=weight, , fill = sex))+
geom_histogram(color = "white", alpha = .5, position = "dodge")+
theme(legent.position = "top")
# The plyr package is use to calculate the mean weight of each group
install.packages(plyr)
install.packages("plyr")
# install.packages("plyr")
library("plyr")
group_mean = ddply(dataset, "sex", summarise, grp.mean = mean(weight))
View(group_mean)
group_mean
myplot = ggplot(dataset, aes(x=weight, , fill = sex))+
geom_histogram(color = "white", alpha = .5, position = "dodge")+
geom_vline(data = group_means, aes(xinterxept = grp.mean))
group_means
group_means = ddply(dataset, "sex", summarise, grp.mean = mean(weight))
group_means
myplot = ggplot(dataset, aes(x=weight, , fill = sex))+
geom_histogram(color = "white", alpha = .5, position = "dodge")+
geom_vline(data = group_means, aes(xinterxept = grp.mean))
theme(legent.position = "top")
myplot
# adding mean lines
myplot = ggplot(dataset, aes(x=weight, , fill = sex))+
geom_histogram(color = "white", alpha = .5, position = "dodge")+
geom_vline(data = group_means, aes(xinterxept = grp.mean))+
theme(legent.position = "top")
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myplot
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot
# Using custom color palettes
myplot
# Using custom color palettes
myPlot
# Using custom color palettes
myPlot + scale_color_manual(values = c("red", "blue"))+
scale_fill_manual(values = c( "green", "orange"))
# Legend replace in the top
ggplot(dataset, aes(x=weight, , fill = sex))+
geom_histogram(color = "white", alpha = 1, position = "dodge")+
theme(legent.position = "top")
myPlot + scale_color_manual(values = c("red", "blue"))+
scale_fill_manual(values = c( "green", "orange"))
# Using custom color palettes
myPlot + scale_color_manual(values = c("#999999", "#E69F00"))+
scale_fill_manual(values = c( "green", "orange"))
# Using custom color palettes
myPlot + scale_color_manual(values = c("#999999", "#E69F00"))+
scale_fill_manual(values = c( "#999999", "orange"))
# Using custom color palettes
myPlot + scale_color_manual(values = c("red", "#E69F00"))+
scale_fill_manual(values = c( "#999999", "orange"))
# Using custom color palettes
myPlot + scale_color_manual(values = c("red", "blue"))+
scale_fill_manual(values = c( "#999999", "orange"))
myPlot + scale_color_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")
myPlot + scale_color_brewer(palette = "Paired")+
scale_fill_brewer(palette = "Paired")
Dark2
Dark2
myPlot + scale_color_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")
# Using a grey scale
myPlot + scale_color_grey() + scale_fill_grey()
# Using a grey scale
myPlot + scale_color_grey() + scale_fill_grey() +
theme_classic()
